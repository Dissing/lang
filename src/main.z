
mod cstd;
mod intmap;
mod strmap;
mod source_map;
mod error;
mod interning;
mod session;
mod tokens;
mod lexer;
mod types;
mod ast;
mod parser;
mod resolution;
mod codegen;

fn basename(path: *char) -> *char
fn dirname(path: *char) -> *char

fn main(argc: int, argv: **char) -> int {
  if argc != 3 {
    printf("Usage: compiler INPUT OUTPUT\n");
    abort();
  }

  var sess: Session;


  sess.interner = interner_create();
  sess.source = source_map_create();
  var root_module: *char = basename(argv[1]);
  sess.root_path = dirname(argv[1]);

  val ast: Ast = parse(&sess, root_module);

  //resolve(&sess, &ast);
  //check(&sess, &ast);
  generate(&sess, ast, argv[2]);

  return 0;
}
