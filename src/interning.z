use super::cstd::*;
use super::strmap::*;

Sid :: struct {
  x: u32,
}

Interner :: struct {
  str_lookup: *StrMap,
  sid_lookup: **char,
  next_sid: u32,
}

interner_create :: () -> Interner {
  interner: Interner;
  interner.str_lookup = strmap_create(2048);
  interner.sid_lookup = calloc(8, 2048);
  interner.next_sid = 1;
  return interner;
}


intern :: (self: *Interner, string: *char) -> Sid  {
  sid: Sid;
  sid.x = strmap_lookup(self.str_lookup, string);
  if sid.x == 0 {

    sid.x = self.next_sid;
    self.next_sid = self.next_sid + 1;

    len: u64 = strlen(string) + 1;
    copy: *char = malloc(len);
    memcpy(copy, string, len);
    self.sid_lookup[sid.x] = copy;

    strmap_insert(self.str_lookup, copy, sid.x);
  };
  return sid;
}

get_str :: (self: *Interner, sid: Sid) -> *char {
  return self.sid_lookup[sid.x];
}
